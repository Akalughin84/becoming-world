// app.js
// üå± Becoming ‚Äî —Å–æ–∑–¥–∞–Ω–æ –ê–ª–µ–∫—Å–µ–π –ö–∞–ª—É–≥–∏–Ω, 2025
// –ù–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –î–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è.
// –¢—ã –∑–¥–µ—Å—å. –≠—Ç–æ —É–∂–µ –ø–æ–±–µ–¥–∞.

// === –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ===
const DONATE = {
  boosty: "https://boosty.to/becoming",
  kofi: "https://ko-fi.com/becoming5036"
};

const NATURE_SOUNDS = {
  rain: "üåßÔ∏è –î–æ–∂–¥—å",
  fire: "üî• –û–≥–æ–Ω—å",
  ocean: "üåä –û–∫–µ–∞–Ω"
};

const DAILY_WORDS = ["–î—ã—à–∏", "–¢—ã –∑–¥–µ—Å—å", "–≠—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ", "–ò–¥–∏", "–í–µ—Ä—å", "–ë—É–¥—å"];

const GROWTH_AXES = [
  { neg: "–Ω–µ –∑–Ω–∞—é", pos: "–∑–¥–µ—Å—å", label: "–ì–ª—É–±–∏–Ω–∞" },
  { neg: "–æ–¥–∏–Ω", pos: "—Å–≤—è–∑—å", label: "–°–≤—è–∑—å" },
  { neg: "—É—Å—Ç–∞–ª", pos: "–ø–æ–∫–æ–π", label: "–≠–Ω–µ—Ä–≥–∏—è" },
  { neg: "—Å—Ç—Ä–∞—Ö", pos: "–≤–µ—Ä–∞", label: "–°–º–µ–ª–æ—Å—Ç—å" }
];

// === –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ===
const userData = {
  version: 1,
  wordCounts: {},
  dailyWords: [],
  letters: [],
  dreams: [],
  forgiveness: [],
  silenceMoments: []
};

// === –ó–∞–≥—Ä—É–∑–∫–∞/—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ===
function loadData() {
  try {
    const saved = localStorage.getItem('becoming_data');
    if (saved) {
      const parsed = JSON.parse(saved);
      Object.assign(userData, parsed);
      // –û—á–∏—Å—Ç–∫–∞ –æ—Ç –±–∏—Ç—ã—Ö –¥–∞—Ç
      userData.dailyWords = userData.dailyWords.filter(w => 
        w.date && !isNaN(new Date(w.date).getTime())
      );
    }
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", e);
  }
}

function saveData() {
  try {
    localStorage.setItem('becoming_data', JSON.stringify(userData));
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", e);
  }
}

loadData();

// === –°–ª–æ–≤–æ –¥–Ω—è ===
function getDailyWord() {
  const today = new Date().toDateString();
  const usedToday = userData.dailyWords.filter(w => 
    new Date(w.date).toDateString() === today
  );

  if (usedToday.length > 0) return usedToday[0].word;

  const word = DAILY_WORDS[Math.floor(Math.random() * DAILY_WORDS.length)];
  userData.dailyWords.push({ word, date: new Date().toISOString() });
  saveData();
  return word;
}

// === –ü–∏—Å—å–º–æ —Å–µ–±–µ ===
function writeLetter() {
  const text = prompt("–ù–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ —Å–µ–±–µ —á–µ—Ä–µ–∑ –≥–æ–¥:");
  if (text?.trim()) {
    userData.letters.push({
      content: text.trim(),
      timestamp: new Date().toISOString()
    });
    saveData();
    showModal("‚úâÔ∏è –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");
  }
}

// === –ü–∏—Å—å–º–æ –ø—Ä–æ—â–µ–Ω–∏—é ===
function showForgiveness() {
  const recipient = prompt("–ö–æ–º—É —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ—Å—Ç–∏—Ç—å? (–Ω–∞–ø—Ä–∏–º–µ—Ä: —Å–µ–±–µ, –º–∞–º–µ)") || "—Ç–æ–º—É, –∫—Ç–æ –∂–¥–∞–ª";
  const content = prompt("–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –ø–∏—Å—å–º–æ:");
  if (content?.trim()) {
    userData.forgiveness.push({
      recipient: recipient.trim(),
      text: content.trim(),
      date: new Date().toISOString()
    });
    saveData();
    showModal("‚úÖ –¢—ã —Å–∫–∞–∑–∞–ª. –≠—Ç–æ –≤–∞–∂–Ω–æ.");
  }
}

// === –ó–∞–ø–∏—Å—å —Å–Ω–∞ ===
function saveDream() {
  const dream = prompt("–†–∞—Å—Å–∫–∞–∂–∏ —Å–æ–Ω:");
  if (dream?.trim()) {
    userData.dreams.push({
      text: dream.trim(),
      timestamp: new Date().toISOString()
    });
    saveData();
    showModal("üåå –°–æ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω.");
  }
}

// === –ü—Ä–æ—Å—Ç–æ –±—ã—Ç—å ===
function logSilence() {
  userData.silenceMoments.push(new Date().toISOString());
  saveData();
  showModal("üßò –¢—ã –±—ã–ª. –≠—Ç–æ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ.");
}

// === –ü—Ä–∏—Ä–æ–¥–∞ ===
function playNature(sound) {
  document.querySelectorAll('audio').forEach(a => a.pause());
  if (!NATURE_SOUNDS[sound]) return;

  try {
    const audio = new Audio(`sounds/${sound}.mp3`);
    audio.loop = true;
    const playPromise = audio.play();
    if (playPromise !== undefined) {
      playPromise.catch(e => {
        console.warn("–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:", e);
        showModal("‚ö†Ô∏è –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫, –Ω–∞–∂–º–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
      });
    }
    showModal(`üéß ${NATURE_SOUNDS[sound]} –∏–¥—ë—Ç. –ù–∞–∂–º–∏ '–ü–∞—É–∑–∞'.`, "rain");
  } catch (e) {
    showModal("‚ö†Ô∏è –ó–≤—É–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å –ø–∞–ø–∫—É /sounds");
  }
}

// === –ö–∞—Ä—Ç–∞ —Ä–æ—Å—Ç–∞ ===
function showMap() {
  let map = "üó∫ –í–∏–∑—É–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ —Ä–æ—Å—Ç–∞\n\n";
  GROWTH_AXES.forEach(ax => {
    const neg = userData.wordCounts[ax.neg] || 0;
    const pos = userData.wordCounts[ax.pos] || 0;
    const diff = pos - neg;
    const level = Math.max(0, Math.min(20, 20 + diff));
    const bar = "üåë".repeat(20 - level) + "üå±".repeat(level);
    map += `${ax.neg.toUpperCase()} ${bar} ${ax.pos.toUpperCase()} (${diff:+d})\n`;
  });
  showModal(map);
}

// === –°–ª–æ–≤–∞—Ä—å —Å–µ—Ä–¥—Ü–∞ ===
function showWords() {
  const words = Object.keys(userData.wordCounts)
    .map(w => `${w} ‚Ä¢ (${userData.wordCounts[w]})`)
    .join('\n') || "–ü–æ–∫–∞ –ø—É—Å—Ç–æ";
  showModal(`üìñ –°–ª–æ–≤–∞—Ä—å —Ç–≤–æ–µ–≥–æ —Å–µ—Ä–¥—Ü–∞:\n\n${words}`);
}

// === –°–∞–¥ ===
function showGarden() {
  const hereCount = userData.wordCounts["–∑–¥–µ—Å—å"] || 0;
  const flowers = "üåº".repeat(Math.max(1, Math.floor(hereCount / 3)));
  const message = hereCount < 3 
    ? "–°–µ–º—è –µ—â—ë –≤ –∑–µ–º–ª–µ. –û–Ω–æ —Ä–∞—Å—Ç—ë—Ç." 
    : "–¢—ã —É–∂–µ –Ω–µ —Å–∞–¥–∏—à—å. –¢—ã ‚Äî —Å–∞–¥.";
  showModal(`üå∑ –¢–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–∞–¥:\n\n${flowers}\n\n${message}`);
}

// === –ü—Ä–æ–∑—Ä–µ–Ω–∏–µ ===
function showInsight() {
  showModal("‚ú® –¢—ã —É–∂–µ –Ω–µ –∏–¥—ë—à—å —Å–∫–≤–æ–∑—å —Ç—É–º–∞–Ω. –¢—ã ‚Äî —Å–≤–µ—Ç.");
}

// === –ü–æ–≥–æ–¥–∞ –≤–Ω—É—Ç—Ä–∏ ===
function showWeather() {
  const totalWords = Object.values(userData.wordCounts).reduce((a, b) => a + b, 0);
  let weather, symbol, advice;

  if (totalWords > 20) {
    weather = "–ª–µ—Ç–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è"; symbol = "‚òÄÔ∏è";
    advice = "–¢—ã –∑–¥–µ—Å—å. –≠—Ç–æ —É–∂–µ —Å–≤–µ—Ç.";
  } else if (totalWords > 10) {
    weather = "–≤–µ—Å–Ω–∞ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è"; symbol = "üå±";
    advice = "–¢—ã —Å–Ω–æ–≤–∞ —Ä–∞—Å—Ç—ë—à—å. –ü—É—Å—Ç—å —Å–ª–æ–≤–∞ –±—É–¥—É—Ç —Å–µ–º–µ–Ω–∞–º–∏.";
  } else if (totalWords > 3) {
    weather = "–æ—Å–µ–Ω—å —Ç–∏—à–∏–Ω—ã"; symbol = "üçÇ";
    advice = "–¢—ã —Å–æ–±–∏—Ä–∞–µ—à—å —Ç–æ, —á—Ç–æ –≤—ã—Ä–æ—Å–ª–æ. –ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å.";
  } else {
    weather = "–∑–∏–º–∞ –∫–æ—Ä–Ω–µ–π"; symbol = "‚ùÑÔ∏è";
    advice = "–¢—ã –Ω–µ —Ä–∞—Å—Ç—ë—à—å. –¢—ã ‚Äî –æ—Å–Ω–æ–≤–∞.";
  }

  showModal(`${symbol} –°–µ–≥–æ–¥–Ω—è –≤ —Ç–µ–±–µ: ${weather}.\n\n${advice}`);
}

// === –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ===
function showDonate() {
  const modal = document.createElement('div');
  modal.style.cssText = `
    position: fixed; top: 0; left: 0; width: 100%; height: 100%;
    background: rgba(0,0,0,0.9); color: #aaa; display: flex;
    align-items: center; justify-content: center; z-index: 1000;
    font-family: 'Segoe UI', sans-serif;
  `;
  modal.innerHTML = `
    <div style="background: #111; padding: 30px; border-radius: 12px; max-width: 400px; text-align: center;">
      <h3>üå± –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å Becoming</h3>
      <p>
        –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–≥–ª–æ —Ç–µ–±–µ –±—ã—Ç—å –∑–¥–µ—Å—å ‚Äî  
        —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ.
      </p>
      <p style="font-size: 0.9em; color: #777;">
        –≠—Ç–æ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ.  
        –ù–µ –æ–±—è–∑–∞–Ω. –ü—Ä–æ—Å—Ç–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å.
      </p>
      <div style="margin: 20px 0;">
        <a href="${DONATE.boosty}" target="_blank" style="color: #4CAF50; text-decoration: none;">
          üíö –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ Boosty
        </a><br><br>
        <a href="${DONATE.kofi}" target="_blank" style="color: #00A0C6; text-decoration: none;">
          üíô –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ Ko-fi
        </a>
      </div>
      <button onclick="this.closest('div').remove()" 
              style="background: #333; border: none; padding: 8px 16px; border-radius: 6px; color: #ccc;">
        –ó–∞–∫—Ä—ã—Ç—å
      </button>
    </div>
  `;
  document.body.appendChild(modal);
}

// === –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ===
function showModal(message, type = null) {
  const modal = document.getElementById('modal');
  const modalBody = document.getElementById('modal-body');
  if (!modal || !modalBody) return;

  modalBody.innerHTML = '';
  const p = document.createElement('p');
  p.textContent = message;
  modalBody.appendChild(p);

  const closeBtn = document.createElement('button');
  closeBtn.textContent = "–ó–∞–∫—Ä—ã—Ç—å";
  closeBtn.type = "button";
  closeBtn.onclick = closeModal;

  if (type === "rain") {
    const pauseBtn = document.createElement('button');
    pauseBtn.textContent = "‚è∏Ô∏è –ü–∞—É–∑–∞";
    pauseBtn.type = "button";
    pauseBtn.onclick = stopAudio;
    modalBody.appendChild(pauseBtn);
    modalBody.appendChild(document.createElement('br'));
  }

  modalBody.appendChild(closeBtn);
  modal.style.display = 'flex';
}

function closeModal() {
  document.getElementById('modal').style.display = 'none';
}

function stopAudio() {
  document.querySelectorAll('audio').forEach(a => a.pause());
  closeModal();
}

// === –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ===
document.addEventListener('DOMContentLoaded', () => {
  const greeting = document.querySelector('.greeting');
  if (greeting) {
    const word = getDailyWord();
    greeting.textContent = `–¢—ã –∑–¥–µ—Å—å. –≠—Ç–æ —É–∂–µ –ø–æ–±–µ–¥–∞.\nüå± –°–ª–æ–≤–æ –¥–Ω—è: ${word}`;
  }
});
