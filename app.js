// app.js
// üå± Becoming ‚Äî —Å–æ–∑–¥–∞–Ω–æ –ê–ª–µ–∫—Å–µ–π –ö–∞–ª—É–≥–∏–Ω, 2025
// –ù–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –î–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è.
// –¢—ã –∑–¥–µ—Å—å. –≠—Ç–æ —É–∂–µ –ø–æ–±–µ–¥–∞.

// === –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ===
const userData = {
  wordCounts: {},
  dailyWords: [],
  silenceMoments: [],
  letters: [],
  dreams: [],
  forgiveness: [],
  lastLetter: null
};

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
function loadData() {
  const saved = localStorage.getItem('becoming_data');
  if (saved) {
    Object.assign(userData, JSON.parse(saved));
  }
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
function saveData() {
  localStorage.setItem('becoming_data', JSON.stringify(userData));
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
loadData();

// === –°–ª–æ–≤–æ –¥–Ω—è ===
function getDailyWord() {
  const themes = {
    fear: ["–í–µ—Ä—å", "–¢—ã —Å–∏–ª—å–Ω–µ–µ —Å—Ç—Ä–∞—Ö–∞", "–ò–¥–∏", "–¢—ã –Ω–µ –æ–¥–∏–Ω"],
    tired: ["–û—Ç–¥—ã—Ö–∞–π", "–¢—ã —Å–¥–µ–ª–∞–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ", "–î—ã—à–∏", "–¢—ã –∑–¥–µ—Å—å"],
    default: ["–î—ã—à–∏", "–¢—ã –∑–¥–µ—Å—å", "–≠—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ", "–ò–¥–∏", "–í–µ—Ä—å", "–ë—É–¥—å"]
  };

  const usedToday = userData.dailyWords.filter(w => 
    new Date(w.date).toDateString() === new Date().toDateString()
  ).map(w => w.word);

  const available = themes.default.filter(w => !usedToday.includes(w));
  const word = available.length > 0 ? available[Math.floor(Math.random() * available.length)] : "–ë—É–¥—å";

  userData.dailyWords.push({ word, date: new Date().toISOString() });
  saveData();
  return word;
}

// === –ü—Ä–æ–∑—Ä–µ–Ω–∏—è –ø–æ —Ç—Ä–∏–≥–≥–µ—Ä–∞–º ===
function getInsight() {
  const insights = [
    { condition: () => userData.wordCounts.—Å—Ç—Ä–∞—Ö > (userData.wordCounts.–≤–µ—Ä–∞ || 0) + 3,
      message: "–¢—ã –±–æ–∏—à—å—Å—è –±–æ–ª—å—à–µ, —á–µ–º –≤–µ—Ä–∏—à—å. –ù–æ —Ç—ã –∏–¥—ë—à—å ‚Äî —ç—Ç–æ –∏ –µ—Å—Ç—å –≤–µ—Ä–∞." },
    { condition: () => userData.wordCounts.—É—Å—Ç–∞–ª > 5 && userData.wordCounts.–∑–¥–µ—Å—å > 3,
      message: "–¢—ã —É—Å—Ç–∞—ë—à—å, –∑–∞—â–∏—â–∞—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ. –≠—Ç–æ –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å. –≠—Ç–æ –ª—é–±–æ–≤—å." },
    { condition: () => userData.wordCounts.–Ω–µ_–∑–Ω–∞—é > 10,
      message: "–¢—ã –Ω–µ –∑–Ω–∞–µ—à—å –ø—É—Ç–∏. –ù–æ —Ç—ã –∑–Ω–∞–µ—à—å, —á–µ–≥–æ —Ö–æ—á–µ—à—å. –≠—Ç–æ–≥–æ —Ö–≤–∞—Ç–∏—Ç." },
    { condition: () => true,
      message: "–¢—ã —É–∂–µ –Ω–µ –∏–¥—ë—à—å —Å–∫–≤–æ–∑—å —Ç—É–º–∞–Ω. –¢—ã ‚Äî —Å–≤–µ—Ç." }
  ];

  for (let rule of insights) {
    if (rule.condition()) return rule.message;
  }
  return "–ü–æ–∫–∞ —Ç–∏—à–∏–Ω–∞‚Ä¶";
}

// === –ü–∏—Å—å–º–æ ===
function writeLetter() {
  const text = prompt("–ù–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ —Å–µ–±–µ —á–µ—Ä–µ–∑ –≥–æ–¥:");
  if (text) {
    userData.letters.push({
      content: text,
      timestamp: new Date().toISOString(),
      delivered: false
    });
    userData.lastLetter = new Date().toISOString();
    saveData();
    showModal("üì¨ –¢—ã –Ω–∞–ø–∏—Å–∞–ª –ø–∏—Å—å–º–æ. –û–Ω–æ –±—É–¥–µ—Ç –∂–¥–∞—Ç—å.");
  }
}

// === –ü—Ä–æ–∑—Ä–µ–Ω–∏–µ ===
function showInsight() {
  const insight = getInsight();
  showModal("‚ú® " + insight);
}

// === –¢–∏—à–∏–Ω–∞ ===
function logSilence() {
  userData.silenceMoments.push(new Date().toISOString());
  saveData();
  showModal("üßò –¢—ã –±—ã–ª. –≠—Ç–æ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ.");
}

// === –°–∞–¥ ===
function showGarden() {
  const hereCount = userData.wordCounts.–∑–¥–µ—Å—å || 0;
  const flowers = "üåº".repeat(Math.max(1, Math.floor(hereCount / 3)));
  const message = hereCount < 3 
    ? "–°–µ–º—è –µ—â—ë –≤ –∑–µ–º–ª–µ. –û–Ω–æ —Ä–∞—Å—Ç—ë—Ç." 
    : "–¢—ã —É–∂–µ –Ω–µ —Å–∞–¥–∏—à—å. –¢—ã ‚Äî —Å–∞–¥.";
  showModal(`üå∑ –¢–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–∞–¥:\n\n${flowers}\n\n${message}`);
}

// === –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–æ–≥–æ–¥–∞ ===
function showWeather() {
  const totalWords = Object.values(userData.wordCounts).reduce((a,b) => a+b, 0);
  let weather, symbol, advice;

  if (totalWords > 20) {
    weather = "–ª–µ—Ç–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è"; symbol = "‚òÄÔ∏è";
    advice = "–¢—ã –∑–¥–µ—Å—å. –≠—Ç–æ —É–∂–µ —Å–≤–µ—Ç.";
  } else if (totalWords > 10) {
    weather = "–≤–µ—Å–Ω–∞ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è"; symbol = "üå±";
    advice = "–¢—ã —Å–Ω–æ–≤–∞ —Ä–∞—Å—Ç—ë—à—å. –ü—É—Å—Ç—å —Å–ª–æ–≤–∞ –±—É–¥—É—Ç —Å–µ–º–µ–Ω–∞–º–∏.";
  } else if (totalWords > 3) {
    weather = "–æ—Å–µ–Ω—å —Ç–∏—à–∏–Ω—ã"; symbol = "üçÇ";
    advice = "–¢—ã —Å–æ–±–∏—Ä–∞–µ—à—å —Ç–æ, —á—Ç–æ –≤—ã—Ä–æ—Å–ª–æ. –ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å.";
  } else {
    weather = "–∑–∏–º–∞ –∫–æ—Ä–Ω–µ–π"; symbol = "‚ùÑÔ∏è";
    advice = "–¢—ã –Ω–µ —Ä–∞—Å—Ç—ë—à—å. –¢—ã ‚Äî –æ—Å–Ω–æ–≤–∞.";
  }

  showModal(`${symbol} –°–µ–≥–æ–¥–Ω—è –≤ —Ç–µ–±–µ: ${weather}.\n\n${advice}`);
}

// === –ü–æ–≥–æ–¥–∞ –≤ —Å–ª–æ–≤–∞—Ö ===
function updateGreeting() {
  const word = getDailyWord();
  document.querySelector('.greeting').textContent = `–¢—ã –∑–¥–µ—Å—å. –≠—Ç–æ —É–∂–µ –ø–æ–±–µ–¥–∞.\nüå± –°–ª–æ–≤–æ –¥–Ω—è: ${word}`;
}

// === –ü—Ä–∏—Ä–æ–¥–∞ ===
function playRain() {
  const audio = new Audio('sounds/rain.mp3'); // –ø–æ–ª–æ–∂–∏ –≤ –ø–∞–ø–∫—É /sounds
  audio.loop = true;
  audio.play();
  showModal("üåßÔ∏è –î–æ–∂–¥—å –∏–¥—ë—Ç. –ù–∞–∂–º–∏ '–ü–∞—É–∑–∞', —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.", "rain");
}

function stopAudio() {
  const audios = document.querySelectorAll('audio');
  audios.forEach(a => a.pause());
  document.querySelector('#modal').style.display = 'none';
}

// === –£–º–Ω–∞—è –º–æ–¥–∞–ª–∫–∞ ===
function showModal(message, type = null) {
  const modalBody = document.getElementById('modal-body');
  modalBody.innerHTML = `<p>${message}</p>`;
  
  if (type === "rain") {
    modalBody.innerHTML += `<button onclick="stopAudio()">‚è∏Ô∏è –ü–∞—É–∑–∞</button>`;
  } else {
    modalBody.innerHTML += `<button onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>`;
  }
  
  document.getElementById('modal').style.display = 'flex';
}

function closeModal() {
  document.getElementById('modal').style.display = 'none';
}

// === –ó–∞–ø—É—Å–∫ ===
window.onload = () => {
  updateGreeting();
  checkEveningRitual();
};

// === –í–µ—á–µ—Ä–Ω–∏–π —Ä–∏—Ç—É–∞–ª ===
function checkEveningRitual() {
  const now = new Date();
  if (now.getHours() >= 20) {
    const did = confirm("–í—Ä–µ–º—è –≤–µ—á–µ—Ä–Ω–µ–≥–æ —Ä–∏—Ç—É–∞–ª–∞. –ó–∞–∫—Ä—ã—Ç—å –¥–µ–Ω—å —Ç—Ä–µ–º—è —Å–ª–æ–≤–∞–º–∏?");
    if (did) {
      const q1 = prompt("–ß—Ç–æ –≤–∞–∂–Ω–æ?");
      const q2 = prompt("–ó–∞ —á—Ç–æ –±–ª–∞–≥–æ–¥–∞—Ä—é?");
      const q3 = prompt("–ß—Ç–æ –æ—Ç–ø—É—Å–∫–∞—é?");
      showModal(`üåô –¢—ã –∑–∞–∫—Ä—ã–ª –¥–µ–Ω—å:\n\n${q1 || '...'}\n${q2 || '...'}\n${q3 || '...'}`);
    }
  }
}

// === –î–æ–Ω–∞—Ç—ã ===
function showDonate() {
  const modal = document.createElement('div');
  modal.style.cssText = `
    position: fixed; top: 0; left: 0; width: 100%; height: 100%;
    background: rgba(0,0,0,0.9); color: #aaa; display: flex;
    align-items: center; justify-content: center; z-index: 1000;
    font-family: 'Segoe UI', sans-serif;
  `;
  modal.innerHTML = `
    <div style="background: #111; padding: 30px; border-radius: 12px; max-width: 400px; text-align: center;">
      <h3>üå± –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å Becoming</h3>
      <p>
        –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–≥–ª–æ —Ç–µ–±–µ –±—ã—Ç—å –∑–¥–µ—Å—å ‚Äî  
        —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ.
      </p>
      <p style="font-size: 0.9em; color: #777;">
        –≠—Ç–æ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ.  
        –ù–µ –æ–±—è–∑–∞–Ω. –ü—Ä–æ—Å—Ç–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å.
      </p>
      <div style="margin: 20px 0;">
        <a href="https://boosty.to/becoming" target="_blank" style="color: #4CAF50; text-decoration: none;">
          üíö –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ Boosty
        </a><br><br>
        <a href="https://ko-fi.com/becoming5036" target="_blank" style="color: #00A0C6; text-decoration: none;">
          üíô –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ Ko-fi
        </a>
      </div>
      <button onclick="this.closest('div').remove()" 
              style="background: #333; border: none; padding: 8px 16px; border-radius: 6px; color: #ccc;">
        –ó–∞–∫—Ä—ã—Ç—å
      </button>
    </div>
  `;
  document.body.appendChild(modal);
}

// PWA
if ('serviceWorker' in navigator) {
  window.addEventListener('load', () => {
    navigator.serviceWorker.register('/sw.js');
  });
}
